# -*- coding: utf-8 -*-
"""Copy of Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n0_UubdnDlUA9wtiqdeAdJsOkpjmXu8p
"""

#step-1:We have to import the dataset to the colab noteboook.
import pandas as pd #pd is a instance of pandas
df=pd.read_csv('Data.AI+IOT.csv')#df is a variable,read_csv is a predefined function from pandas package

type(df)

df

#step-2:Grouping the input columns and output columns
X=df.iloc[:,0:3]

X

Y=df.iloc[:,-1]#slicing the output column

Y

X=X.values

X

Y=Y.values

Y

#step-3:Handling the missing data or values
#scenario-1: missing values in numerical value,calculate mean or average of the column and replace the value with empty values.
#scenario-2:missing values in non numerical values, fill the empty value with highly repeated value.
#scenario-3:having missing values in huge dataset remove those empty rows which contains empty rows.
import numpy as np
from sklearn.impute import SimpleImputer#it is class which was imported from
imputer=SimpleImputer(missing_values=np.nan,strategy='mean')
imputer.fit(X[:,1:3])
X[:,1:3]=imputer.transform(X[:,1:3])

X

#step-4:handling the catogorial data
#converting catogorial data into numeric data.
from sklearn.preprocessing import OneHotEncoder #label encoder is class,which was imported from sklearn
from sklearn.compose import ColumnTransformer#column transformer is a class which was imported from sklearn.compose, so column transfromer is used apply changes numeric data in the place of catogorial data.
ct=ColumnTransformer(transformers=[('encoder',OneHotEncoder(),[0])],remainder='passthrough') #encoder is a method which converts text to binary
X=ct.fit_transform(X)

X

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
Y=le.fit_transform(Y)

Y

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2)

X_train

X_test

Y_train

Y_test

#step-6:feature scaling
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train[:,3:]=sc.fit_transform(X_train[:,3:])
X_test[:,3:]=sc.transform(X_test[:,3:])

X_train

#machine learning
#types in machinelearning
#1:supervised learning-when we have labled data,and the model tasks are classification or prediction.
#2:unsupervised learning-unlabled data,model remembers the patterns,we can perform predictions also.
#3:reinforcement learning-trail and error method,model learns from

#1)supervised learning types:
#logistic regression algorithm-when model performing task classification algorithm(yes or no)
#linear regression algorithm-when model performs prediction task we have to apply linear regression algorithm
#step-7:applying algorithm to the data set
from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression()
classifier.fit(X_train,Y_train)

Y_pred=classifier.predict(X_test)

Y_pred